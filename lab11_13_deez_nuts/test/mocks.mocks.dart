// Mocks generated by Mockito 5.4.6 from annotations
// in lab11_13_deez_nuts/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:connectivity_plus/connectivity_plus.dart' as _i7;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i8;
import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:lab11_13_deez_nuts/models/favorite_item.dart' as _i14;
import 'package:lab11_13_deez_nuts/models/user.dart' as _i4;
import 'package:lab11_13_deez_nuts/models/worker.dart' as _i13;
import 'package:lab11_13_deez_nuts/services/connectivity_service.dart' as _i9;
import 'package:lab11_13_deez_nuts/services/firebase_service.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:sqflite_common/sql.dart' as _i11;
import 'package:sqflite_common/sqlite_api.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryCursor_2 extends _i1.SmartFake implements _i2.QueryCursor {
  _FakeQueryCursor_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBatch_3 extends _i1.SmartFake implements _i2.Batch {
  _FakeBatch_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_4 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_5 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_6 extends _i1.SmartFake
    implements _i6.ActionCodeInfo {
  _FakeActionCodeInfo_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_7 extends _i1.SmartFake
    implements _i6.UserCredential {
  _FakeUserCredential_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_8 extends _i1.SmartFake
    implements _i6.ConfirmationResult {
  _FakeConfirmationResult_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_9 extends _i1.SmartFake implements _i6.UserMetadata {
  _FakeUserMetadata_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_10 extends _i1.SmartFake implements _i6.MultiFactor {
  _FakeMultiFactor_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_11 extends _i1.SmartFake implements _i6.IdTokenResult {
  _FakeIdTokenResult_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_12 extends _i1.SmartFake implements _i6.User {
  _FakeUser_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i7.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i8.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i3.Stream<_i8.ConnectivityResult>.empty(),
          )
          as _i3.Stream<_i8.ConnectivityResult>);

  @override
  _i3.Future<_i8.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i3.Future<_i8.ConnectivityResult>.value(
              _i8.ConnectivityResult.bluetooth,
            ),
          )
          as _i3.Future<_i8.ConnectivityResult>);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i9.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get connectionStatus =>
      (super.noSuchMethod(
            Invocation.getter(#connectionStatus),
            returnValue: _i3.Stream<bool>.empty(),
          )
          as _i3.Stream<bool>);

  @override
  _i3.Future<bool> isConnected() =>
      (super.noSuchMethod(
            Invocation.method(#isConnected, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i2.Database {
  MockDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  bool get isOpen =>
      (super.noSuchMethod(Invocation.getter(#isOpen), returnValue: false)
          as bool);

  @override
  _i2.Database get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _FakeDatabase_0(this, Invocation.getter(#database)),
          )
          as _i2.Database);

  @override
  _i3.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<T> transaction<T>(
    _i3.Future<T> Function(_i2.Transaction)? action, {
    bool? exclusive,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#transaction, [action], {#exclusive: exclusive}),
            returnValue:
                _i10.ifNotNull(
                  _i10.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#exclusive: exclusive},
                    ),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#exclusive: exclusive},
                  ),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> readTransaction<T>(
    _i3.Future<T> Function(_i2.Transaction)? action,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#readTransaction, [action]),
            returnValue:
                _i10.ifNotNull(
                  _i10.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#readTransaction, [action]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(#readTransaction, [action]),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> devInvokeMethod<T>(String? method, [Object? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#devInvokeMethod, [method, arguments]),
            returnValue:
                _i10.ifNotNull(
                  _i10.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#devInvokeMethod, [method, arguments]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(#devInvokeMethod, [method, arguments]),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> devInvokeSqlMethod<T>(
    String? method,
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#devInvokeSqlMethod, [method, sql, arguments]),
            returnValue:
                _i10.ifNotNull(
                  _i10.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#devInvokeSqlMethod, [
                      method,
                      sql,
                      arguments,
                    ]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(#devInvokeSqlMethod, [
                    method,
                    sql,
                    arguments,
                  ]),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<void> execute(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [sql, arguments]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> rawInsert(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawInsert, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> insert(
    String? table,
    Map<String, Object?>? values, {
    String? nullColumnHack,
    _i11.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [table, values],
              {
                #nullColumnHack: nullColumnHack,
                #conflictAlgorithm: conflictAlgorithm,
              },
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<Map<String, Object?>>> query(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #query,
              [table],
              {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
              },
            ),
            returnValue: _i3.Future<List<Map<String, Object?>>>.value(
              <Map<String, Object?>>[],
            ),
          )
          as _i3.Future<List<Map<String, Object?>>>);

  @override
  _i3.Future<List<Map<String, Object?>>> rawQuery(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#rawQuery, [sql, arguments]),
            returnValue: _i3.Future<List<Map<String, Object?>>>.value(
              <Map<String, Object?>>[],
            ),
          )
          as _i3.Future<List<Map<String, Object?>>>);

  @override
  _i3.Future<_i2.QueryCursor> rawQueryCursor(
    String? sql,
    List<Object?>? arguments, {
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #rawQueryCursor,
              [sql, arguments],
              {#bufferSize: bufferSize},
            ),
            returnValue: _i3.Future<_i2.QueryCursor>.value(
              _FakeQueryCursor_2(
                this,
                Invocation.method(
                  #rawQueryCursor,
                  [sql, arguments],
                  {#bufferSize: bufferSize},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.QueryCursor>);

  @override
  _i3.Future<_i2.QueryCursor> queryCursor(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #queryCursor,
              [table],
              {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
                #bufferSize: bufferSize,
              },
            ),
            returnValue: _i3.Future<_i2.QueryCursor>.value(
              _FakeQueryCursor_2(
                this,
                Invocation.method(
                  #queryCursor,
                  [table],
                  {
                    #distinct: distinct,
                    #columns: columns,
                    #where: where,
                    #whereArgs: whereArgs,
                    #groupBy: groupBy,
                    #having: having,
                    #orderBy: orderBy,
                    #limit: limit,
                    #offset: offset,
                    #bufferSize: bufferSize,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.QueryCursor>);

  @override
  _i3.Future<int> rawUpdate(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawUpdate, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> update(
    String? table,
    Map<String, Object?>? values, {
    String? where,
    List<Object?>? whereArgs,
    _i11.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #update,
              [table, values],
              {
                #where: where,
                #whereArgs: whereArgs,
                #conflictAlgorithm: conflictAlgorithm,
              },
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> rawDelete(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawDelete, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [table],
              {#where: where, #whereArgs: whereArgs},
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i2.Batch batch() =>
      (super.noSuchMethod(
            Invocation.method(#batch, []),
            returnValue: _FakeBatch_3(this, Invocation.method(#batch, [])),
          )
          as _i2.Batch);
}

/// A class which mocks [DatabaseExecutor].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseExecutor extends _i1.Mock implements _i2.DatabaseExecutor {
  MockDatabaseExecutor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Database get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _FakeDatabase_0(this, Invocation.getter(#database)),
          )
          as _i2.Database);

  @override
  _i3.Future<void> execute(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [sql, arguments]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> rawInsert(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawInsert, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> insert(
    String? table,
    Map<String, Object?>? values, {
    String? nullColumnHack,
    _i11.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [table, values],
              {
                #nullColumnHack: nullColumnHack,
                #conflictAlgorithm: conflictAlgorithm,
              },
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<Map<String, Object?>>> query(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #query,
              [table],
              {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
              },
            ),
            returnValue: _i3.Future<List<Map<String, Object?>>>.value(
              <Map<String, Object?>>[],
            ),
          )
          as _i3.Future<List<Map<String, Object?>>>);

  @override
  _i3.Future<List<Map<String, Object?>>> rawQuery(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#rawQuery, [sql, arguments]),
            returnValue: _i3.Future<List<Map<String, Object?>>>.value(
              <Map<String, Object?>>[],
            ),
          )
          as _i3.Future<List<Map<String, Object?>>>);

  @override
  _i3.Future<_i2.QueryCursor> rawQueryCursor(
    String? sql,
    List<Object?>? arguments, {
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #rawQueryCursor,
              [sql, arguments],
              {#bufferSize: bufferSize},
            ),
            returnValue: _i3.Future<_i2.QueryCursor>.value(
              _FakeQueryCursor_2(
                this,
                Invocation.method(
                  #rawQueryCursor,
                  [sql, arguments],
                  {#bufferSize: bufferSize},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.QueryCursor>);

  @override
  _i3.Future<_i2.QueryCursor> queryCursor(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #queryCursor,
              [table],
              {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset,
                #bufferSize: bufferSize,
              },
            ),
            returnValue: _i3.Future<_i2.QueryCursor>.value(
              _FakeQueryCursor_2(
                this,
                Invocation.method(
                  #queryCursor,
                  [table],
                  {
                    #distinct: distinct,
                    #columns: columns,
                    #where: where,
                    #whereArgs: whereArgs,
                    #groupBy: groupBy,
                    #having: having,
                    #orderBy: orderBy,
                    #limit: limit,
                    #offset: offset,
                    #bufferSize: bufferSize,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.QueryCursor>);

  @override
  _i3.Future<int> rawUpdate(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawUpdate, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> update(
    String? table,
    Map<String, Object?>? values, {
    String? where,
    List<Object?>? whereArgs,
    _i11.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #update,
              [table, values],
              {
                #where: where,
                #whereArgs: whereArgs,
                #conflictAlgorithm: conflictAlgorithm,
              },
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> rawDelete(String? sql, [List<Object?>? arguments]) =>
      (super.noSuchMethod(
            Invocation.method(#rawDelete, [sql, arguments]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [table],
              {#where: where, #whereArgs: whereArgs},
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i2.Batch batch() =>
      (super.noSuchMethod(
            Invocation.method(#batch, []),
            returnValue: _FakeBatch_3(this, Invocation.method(#batch, [])),
          )
          as _i2.Batch);
}

/// A class which mocks [FirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseService extends _i1.Mock implements _i12.FirebaseService {
  MockFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UserModel> getUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [userId]),
            returnValue: _i3.Future<_i4.UserModel>.value(
              _FakeUserModel_4(this, Invocation.method(#getUser, [userId])),
            ),
          )
          as _i3.Future<_i4.UserModel>);

  @override
  _i3.Future<_i6.UserCredential?> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i3.Future<_i6.UserCredential?>.value(),
          )
          as _i3.Future<_i6.UserCredential?>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getWorkers() =>
      (super.noSuchMethod(
            Invocation.method(#getWorkers, []),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<void> createWorker(_i13.Worker? worker) =>
      (super.noSuchMethod(
            Invocation.method(#createWorker, [worker]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateWorker(String? workerId, _i13.Worker? worker) =>
      (super.noSuchMethod(
            Invocation.method(#updateWorker, [workerId, worker]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteWorker(String? workerId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteWorker, [workerId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i14.FavoriteItem>> getFavorites(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getFavorites, [userId]),
            returnValue: _i3.Future<List<_i14.FavoriteItem>>.value(
              <_i14.FavoriteItem>[],
            ),
          )
          as _i3.Future<List<_i14.FavoriteItem>>);

  @override
  _i3.Future<void> createFavorite(_i14.FavoriteItem? favorite) =>
      (super.noSuchMethod(
            Invocation.method(#createFavorite, [favorite]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteFavorite(String? userId, String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFavorite, [userId, itemId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i6.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_5(this, Invocation.getter(#app)),
          )
          as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i3.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i3.Future<_i6.ActionCodeInfo>.value(
              _FakeActionCodeInfo_6(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i3.Future<_i6.ActionCodeInfo>);

  @override
  _i3.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<_i6.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i3.Stream<_i6.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i3.Stream<_i6.User?>.empty(),
          )
          as _i3.Stream<_i6.User?>);

  @override
  _i3.Stream<_i6.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i3.Stream<_i6.User?>.empty(),
          )
          as _i3.Stream<_i6.User?>);

  @override
  _i3.Stream<_i6.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i3.Stream<_i6.User?>.empty(),
          )
          as _i3.Stream<_i6.User?>);

  @override
  _i3.Future<void> sendPasswordResetEmail({
    required String? email,
    _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setPersistence(_i6.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> signInWithCredential(
    _i6.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> signInWithProvider(
    _i6.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i6.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i3.Future<_i6.ConfirmationResult>.value(
              _FakeConfirmationResult_8(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i3.Future<_i6.ConfirmationResult>);

  @override
  _i3.Future<_i6.UserCredential> signInWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<void> signInWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i3.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i6.PhoneMultiFactorInfo? multiFactorInfo,
    required _i6.PhoneVerificationCompleted? verificationCompleted,
    required _i6.PhoneVerificationFailed? verificationFailed,
    required _i6.PhoneCodeSent? codeSent,
    required _i6.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i6.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i6.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i6.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_9(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i6.UserMetadata);

  @override
  List<_i6.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i6.UserInfo>[],
          )
          as List<_i6.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i10.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i6.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_10(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i6.MultiFactor);

  @override
  _i3.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<_i6.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i3.Future<_i6.IdTokenResult>.value(
              _FakeIdTokenResult_11(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i3.Future<_i6.IdTokenResult>);

  @override
  _i3.Future<_i6.UserCredential> linkWithCredential(
    _i6.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> linkWithProvider(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> reauthenticateWithProvider(
    _i6.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<_i6.UserCredential> reauthenticateWithPopup(
    _i6.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<void> reauthenticateWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.UserCredential> linkWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<void> linkWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i6.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i3.Future<_i6.ConfirmationResult>.value(
              _FakeConfirmationResult_8(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i3.Future<_i6.ConfirmationResult>);

  @override
  _i3.Future<_i6.UserCredential> reauthenticateWithCredential(
    _i6.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i3.Future<_i6.UserCredential>.value(
              _FakeUserCredential_7(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i3.Future<_i6.UserCredential>);

  @override
  _i3.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> sendEmailVerification([
    _i6.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i3.Future<_i6.User>.value(
              _FakeUser_12(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i3.Future<_i6.User>);

  @override
  _i3.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePhoneNumber(
    _i6.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i6.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
